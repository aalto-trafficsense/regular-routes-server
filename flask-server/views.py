from flask import url_for
from flask.ext.classy import FlaskView
"""
Framework: Flask+flask-classy - See https://pythonhosted.org/Flask-Classy/ for examples
"""

class DataCollectorView(FlaskView):
    """ REST interface:  '/api/datacollector'
        URI path is parsed from class name by classy automatically.
    """
    route_prefix = '/api/'

    def get(self, transact_id):

        """
        resource uri: /api/datacollector/<transaction_id>
        method: GET
        :param transact_id: uuid generated by client for single packet transmission id
        :return: HTTP response
        """

        # 1. check if db's transaction log contains transaction id
        # 2. return response for 'exists' query
        return url_for("DataCollectorView:get", transact_id=transact_id)  # for testing
        NotImplemented

    def post(self, packet):
        """
            resource uri: /api/datacollector
            method: POST
        :param packet: json-object for data transfer from client
        """

        NotImplemented
        # 1. validate data

        # 2. log transaction

        # 3. Log data to db as "raw"

        # 4. Combine location data with OSM data

        # 5. Store data to PostGIS

